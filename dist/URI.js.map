{"version":3,"file":"URI.js","sources":["../URI.ts"],"sourcesContent":["/**\n * @module URI\n * @license MIT\n * @version 2018/03/28\n */\n\n// Undefined\nconst UNDEFINED: undefined = void 0;\n// Parse query regex\nconst PARSE_QUERY_REGEX: RegExp = /(?:^|&)([^&=]*)(?:=([^&]*))?/g;\n// Parse WHATWG URI regex\n//\n//     1.protocol                 2.user     3.pass     4.hostname         5.port      6.pathname 7.search 8.hash\n//          |                       |           |            |                |              |       |       |\n//   ---------------             --------    -------     ----------    ---------------   ----------------- -----\n// /^([a-z0-9.+-]+:)?(?:\\/\\/)?(?:([^/:]*)(?::([^/]*))?@)?([^:?#/]*)(?::(\\d*(?=$|[?#/])))?([^?#]*)(\\?[^#]*)?(#.*)?/i\nconst WHATWG_URI_REGEX: RegExp = /^([a-z0-9.+-]+:)?(?:\\/\\/)?(?:([^/:]*)(?::([^/]*))?@)?([^:?#/]*)(?::(\\d*(?=$|[?#/])))?([^?#]*)(\\?[^#]*)?(#.*)?/i;\n\n/**\n * @function normalize\n * @param {string} value\n * @returns {string|null}\n */\nfunction normalize(value: string): string | null {\n  if (value === UNDEFINED) return null;\n\n  return value;\n}\n\n/**\n * @function isNotNull\n * @param {string|null} value\n * @returns {boolean}\n */\nfunction isNotNull(value: string | null): boolean {\n  return value !== null;\n}\n\n/**\n * @function encode\n * @param {string|null} value\n * @returns {string|null}\n */\nfunction encode(value: string | null): string | null {\n  if (!value) return value;\n\n  return encodeURIComponent(value);\n}\n\n/**\n * @function decode\n * @param {string|null} value\n * @returns {string|null}\n */\nfunction decode(value: string | null): string | null {\n  if (!value) return value;\n\n  return decodeURIComponent(value);\n}\n\n/**\n * @function parse\n * @param {string} search\n * @returns {Object}\n */\nfunction parse(search: string): Object {\n  const query: Object = {};\n\n  if (!search) return query;\n\n  search = search.replace(/^[?#]/, '');\n\n  if (search) {\n    while (true) {\n      const matched: string[] | null = PARSE_QUERY_REGEX.exec(search);\n\n      if (matched) {\n        const key: string = decode(matched[1] || '');\n        const value: string | null = decode(normalize(matched[2]));\n\n        if (query.hasOwnProperty(key)) {\n          if (!Array.isArray(query[key])) {\n            query[key] = [query[key]];\n          }\n\n          query[key].push(value);\n        } else {\n          query[key] = value;\n        }\n      } else {\n        break;\n      }\n    }\n  }\n\n  return query;\n}\n\n/**\n * @function stringify\n * @param {Object} param\n * @param {string} prefix\n * @returns {string}\n */\nfunction stringify(query: Object, prefix: string): string {\n  let search: string = '';\n\n  for (let key in query) {\n    if (query.hasOwnProperty(key)) {\n      const value: string | string[] = query[key];\n\n      // Encode key\n      key = encode(key);\n\n      if (Array.isArray(value)) {\n        value.forEach(item => {\n          search += '&' + key;\n\n          if (isNotNull(item)) {\n            search += '=' + encode(item);\n          }\n        });\n      } else {\n        search += '&' + key;\n\n        if (isNotNull(value)) {\n          search += '=' + encode(value);\n        }\n      }\n    }\n  }\n\n  return search.replace(/^&/, prefix);\n}\n\n/**\n * @class URI\n */\nexport default class URI {\n  public protocol: string | null;\n  public username: string | null;\n  public password: string | null;\n  public hostname: string | null;\n  public port: string | null;\n  public pathname: string | null;\n  public query: Object;\n  public fragment: Object;\n\n  /**\n   * @constructor\n   * @param {string} URI\n   */\n  constructor(URI: string) {\n    const context: URI = this;\n    const matched: string[] | null = WHATWG_URI_REGEX.exec(URI);\n\n    // Normalize URI\n    if (!matched) {\n      throw Error('URI not a standard WHATWG URI.');\n    }\n\n    const [\n      ,\n      // Matched\n      protocol,\n      username,\n      password,\n      hostname,\n      port,\n      pathname,\n      search,\n      hash\n    ] = matched;\n\n    context.protocol = normalize(protocol);\n    context.username = normalize(username);\n    context.password = normalize(password);\n    context.hostname = normalize(hostname);\n    context.port = normalize(port);\n    context.pathname = normalize(pathname);\n\n    context.query = parse(search);\n    context.fragment = parse(hash);\n  }\n\n  /**\n   * @property search\n   * @method get\n   * @returns {string}\n   */\n  public get search(): string {\n    return stringify(this.query, '?');\n  }\n\n  /**\n   * @property hash\n   * @method get\n   * @returns {string}\n   */\n  public get hash(): string {\n    return stringify(this.fragment, '#');\n  }\n\n  /**\n   * @method toURI\n   * @returns {string}\n   */\n  public toURI(): string {\n    let URI: string = '';\n    const context: URI = this;\n    const protocol: string | null = context.protocol;\n    const username: string | null = context.username;\n    const password: string | null = context.password;\n    const hostname: string | null = context.hostname;\n    const port: string | null = context.port;\n\n    if (isNotNull(protocol)) {\n      URI += protocol;\n    }\n\n    if (isNotNull(protocol)) {\n      URI += '//';\n    }\n\n    if (isNotNull(username)) {\n      URI += username;\n    }\n\n    if (isNotNull(password)) {\n      URI += ':' + password;\n    }\n\n    if (isNotNull(username) || isNotNull(password)) {\n      URI += '@';\n    }\n\n    if (isNotNull(hostname)) {\n      URI += hostname;\n    }\n\n    if (isNotNull(port)) {\n      URI += ':' + port;\n    }\n\n    URI += context.pathname + context.search + context.hash;\n\n    return URI;\n  }\n\n  /**\n   * @method toString\n   * @returns {string}\n   */\n  public toString(): string {\n    return this.toURI();\n  }\n}\n"],"names":[],"mappings":"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"}